################################################################################
#!perl
#
#
#  Rob McCarthy's MalwareSig source
#  Copyright 2006 Lightspeed Systems Corp.
#
################################################################################



# Pragmas
use warnings;
use strict;


use Getopt::Long;
use Cwd;

use Content::File;
use Content::Scanable;
use Content::Category;



# Options & Defaults
my $opt_outfile = "MalwareSig.txt";
my $opt_version;
my $opt_help;
my $_version = "1.0.0";
my $OUTFILE;
my $total_count = 0 + 0;




################################################################################
#
MAIN:
#
################################################################################
{
    # Get the options
    Getopt::Long::Configure("bundling");

    my $options = Getopt::Long::GetOptions
    (
        "o|output=s"		=> \$opt_outfile,
        "v|version"			=> \$opt_version,
        "h|help"			=> \$opt_help
    );


    &StdHeader( "MalwareSig" );
	
	
    &Usage() if ( $opt_help );
    &Version() if ( $opt_version );

	my $opt = shift;
	$opt_outfile = $opt if ( $opt );
	
	
    &Usage() if ( ! $opt_outfile );
		
		
	print "Creating Malware Signatures ...\n";

	
	# Open the output file
	open $OUTFILE, ">>$opt_outfile" or die( "Cannot open outfile $opt_outfile: $!\n" );

	print "Writing results to $opt_outfile ...\n";
  
	my $dir = getcwd;
    $dir =~ s#\/#\\#gm;
	
	
	&MalwareSig( $dir );
	
	
	chdir( $dir );

	close( $OUTFILE );
	
	print "Found malware signatures for $total_count programs\n";
	
	&StdFooter;
	
	exit;
}



################################################################################
# 
sub MalwareSig( $$ )
#
################################################################################
{	my $dir 	= shift;

	print "Directory: $dir\n"; 
	chdir "$dir";


	# First, get all the sigs from the current directory
	my $file_handle;
	opendir( $file_handle, $dir ) or die "Unable to open directory $dir: $!\n";

	while ( my $file = readdir( $file_handle ) )
		{	
			next if ( ! defined $file );
			next if ( -d $file );
			
			next if ( ! -f $file );
			
			my $fullfile = "$dir\\$file";
			
			my $scanable = &Scanable( $fullfile );
				
			next if ( ! $scanable );
			
			next if ( $scanable != 1 );
			
			my ( $time_date, $image_size, $entry_point, $code_size ) = &CategoryPEData( $fullfile );
			
			next if ( ! $time_date );
			
			print $OUTFILE "$file:$time_date:$image_size:$entry_point:$code_size\n";
			
			$total_count++;
		}
	
	closedir( $file_handle );
	
	
	# Finally, go down into the subdirectories looking for more programs
	my $dir_handle;
	opendir( $dir_handle, $dir ) or die "Unable to open directory $dir: $!\n";

	while ( my $subdir = readdir( $dir_handle ) )
		{	
			next if ( ! defined $subdir );

			next if ( $subdir eq "." );
			next if ( $subdir eq ".." );

			next if ( ! -d $subdir );
	
			my $fulldir = "$dir\\$subdir";

			&MalwareSig( $fulldir );

			chdir( $dir );
		}


	closedir( $dir_handle );

	return( 0 );
}



################################################################################
# 
sub Usage
#
################################################################################
{

    print <<".";
Usage: MalwareSig OUTPUT
Goes through the current directory and and all subdirectories building
Malware signatures for use with the MalwareSearch utility

  -o, --output OUTPUT     output file, default is MalwareSig.txt
  -h, --help              display this help and exit
  -v, --version           display version information and exit
.
    exit;
}


################################################################################
# 
sub Version
#
################################################################################
{
    (my $me = $0) =~ s/\.cmd$//;

    print <<".";
$me $_version
.
    exit;
}

################################################################################

__END__

:endofperl
